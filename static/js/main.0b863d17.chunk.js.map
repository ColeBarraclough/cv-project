{"version":3,"sources":["Education.js","Experience.js","Info.js","App.js","reportWebVitals.js","index.js"],"names":["Education","props","setDisabled","toSet","setState","disabled","state","this","type","id","placeholder","className","Component","Experience","Info","App","firstName","lastName","dateOfBirth","addEducation","addExperience","infoElements","React","createRef","educationRefList","educationElements","experienceRefList","experienceElements","submit","bind","currentElements","i","length","current","push","map","tempRef","index","ref","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b863d17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Components.css';\nclass Education extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            disabled: false,\n        };\n    }\n\n    setDisabled = (toSet) => {\n        this.setState({\n            disabled: toSet,\n        });\n    }\n\n    render() {\n        return (\n            <div  {...this.props}>\n                <input type=\"text\" id=\"school\" placeholder=\"School\" disabled={this.state.disabled} ></input>\n                <input  type=\"text\" id=\"graduationType\" placeholder=\"Level of Education\" disabled={this.state.disabled}></input>\n                <input  type=\"text\" className=\"dateStarted\" placeholder=\"Date Started\" disabled={this.state.disabled}></input>\n                <input  type=\"text\" className=\"dateEnded\" placeholder=\"Date Ended\" disabled={this.state.disabled}></input>\n                <textarea  className=\"description\" placeholder=\"Enter some more information\" disabled={this.state.disabled}></textarea>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport  './Components.css';\n\nclass Experience extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            disabled: false,\n        };\n    }\n\n    setDisabled = (toSet) => {\n        this.setState({\n            disabled: toSet,\n        });\n    }\n    render() {\n        return (\n            <div {...this.props}>\n                <input type=\"text\" id=\"company\" placeholder=\"Company\" disabled={this.state.disabled}></input>\n                <input type=\"text\" id=\"position\" placeholder=\"Position\" disabled={this.state.disabled}></input>\n                <input type=\"text\" className=\"dateStarted\" placeholder=\"Date Started\" disabled={this.state.disabled}></input>\n                <input type=\"text\" className=\"dateEnded\" placeholder=\"Date Ended\" disabled={this.state.disabled}></input>\n                <textarea className=\"description\" placeholder=\"Enter some more information\" disabled={this.state.disabled}></textarea>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Experience;","import React, { Component } from \"react\";\nimport './Components.css';\n\nclass Info extends Component {\n    constructor() {\n        super();\n        this.state = {\n            disabled: false,\n        };\n    }\n\n    setDisabled = (toSet) => {\n        this.setState({\n            disabled: toSet,\n        });\n    }\n    render() {\n        return (\n            <div {...this.props}>\n                <input type=\"text\" id=\"fname\"  placeholder=\"First Name\" disabled={this.state.disabled}></input>\n                <input type=\"text\" id=\"lname\"  placeholder=\"Last Name\" disabled={this.state.disabled}></input>\n                <input type=\"text\" id=\"dob\"  placeholder=\"Date of Birth\" disabled={this.state.disabled}></input>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Info;","import React, { Component } from \"react\";\nimport './App.css';\nimport Education from \"./Education.js\"\nimport Experience from \"./Experience\";\nimport Info from \"./Info\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      dateOfBirth: \"\",\n      addEducation: false,\n      addExperience: false,\n    };\n    \n    this.infoElements = [React.createRef()];\n    this.educationRefList = [];\n    this.educationElements = [];\n    this.experienceRefList = [];\n    this.experienceElements = [];\n    this.submit = this.submit.bind(this);\n    this.addEducation = this.addEducation.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n  }\n\n\n submit(currentElements, disabled) {\n  for (let i = 0; i < currentElements.length; i++) {\n    currentElements[i].current.setDisabled(disabled);\n  }\n}\n  \n\n  addEducation() {\n    this.setState({addEducation: true,});\n    this.educationRefList.push(React.createRef());\n    this.educationElements = this.educationRefList.map((tempRef, index) => \n      <Education className='education' key={index} ref={this.educationRefList[index]}/>\n    );\n  }\n\n  addExperience() {\n    this.setState({addExperience: true,});\n    this.experienceRefList.push(React.createRef());\n    this.experienceElements = this.experienceRefList.map((tempRef, index) => \n      <Experience className='experience' key={index} ref={this.experienceRefList[index]}/>\n    );\n  }\n\n\n  render() {\n    return (\n      <div id=\"app\">\n        <h1>Resume Builder</h1>\n        <form>\n          <Info className='info' ref={this.infoElements[0]}/>\n          <button  className='submit' type=\"button\" onClick={() => this.submit(this.infoElements, true)} id=\"submitInfo\">Submit</button>\n          <button className='edit' type=\"button\" onClick={() => this.submit(this.infoElements, false)} id=\"editInfo\">Edit</button>\n        </form>\n        <form>\n          <h2>Education</h2>\n          <button className='submit' type=\"button\" onClick={() => this.submit(this.educationRefList, true)} id=\"submitEducation\">Submit</button> \n          <button className='add' type=\"button\" onClick={this.addEducation} id=\"addEducation\">Add</button>\n          <button className='edit' type=\"button\" onClick={() => this.submit(this.educationRefList, false)} id=\"editEducatthis.educationRefListion\">Edit</button>\n            <ul>\n              {this.educationElements}\n            </ul>\n        </form>\n        <form>\n          <h2>Experience</h2>\n          <button className='submit' type=\"button\" onClick={() => this.submit(this.experienceRefList, true)} id=\"submitExperience\">Submit</button>\n          <button className='add' type=\"button\" onClick={this.addExperience} id=\"addExperience\">Add</button>\n          <button className='edit' type=\"button\" onClick={() => this.submit(this.experienceRefList, false)} id=\"editExperience\">Edit</button>\n            <ul>\n              {this.experienceElements}\n            </ul>\n        </form>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}